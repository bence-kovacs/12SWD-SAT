<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EquipmentInventoryDataSet" targetNamespace="http://tempuri.org/EquipmentInventoryDataSet.xsd" xmlns:mstns="http://tempuri.org/EquipmentInventoryDataSet.xsd" xmlns="http://tempuri.org/EquipmentInventoryDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="EquipmentInventoryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EquipmentInventoryConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Equipment_Booking_System.My.MySettings.GlobalReference.Default.EquipmentInventoryConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EquipmentAudio&#xD;&#xA;TableAdapter" GeneratorDataComponentClassName="EquipmentAudio__TableAdapter" Name="EquipmentAudio&#xD;&#xA;" UserDataComponentName="EquipmentAudio&#xD;&#xA;TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EquipmentInventoryConnectionString (MySettings)" DbObjectName="dbo.[EquipmentAudio&#xD;&#xA;]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[EquipmentAudio
] WHERE (([Equipment] = @Original_Equipment))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Equipment" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Equipment" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EquipmentAudio
] ([Equipment]) VALUES (@Equipment);
SELECT Equipment FROM [EquipmentAudio
] WHERE (Equipment = @Equipment)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Equipment" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Equipment" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Equipment FROM dbo.[EquipmentAudio
]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[EquipmentAudio
] SET [Equipment] = @Equipment WHERE (([Equipment] = @Original_Equipment));
SELECT Equipment FROM [EquipmentAudio
] WHERE (Equipment = @Equipment)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Equipment" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Equipment" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Equipment" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Equipment" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Equipment" DataSetColumn="Equipment" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EquipmentCategoryTableAdapter" GeneratorDataComponentClassName="EquipmentCategoryTableAdapter" Name="EquipmentCategory" UserDataComponentName="EquipmentCategoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EquipmentInventoryConnectionString (MySettings)" DbObjectName="dbo.EquipmentCategory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[EquipmentCategory] WHERE (([Category] = @Original_Category))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EquipmentCategory] ([Category]) VALUES (@Category);
SELECT Category FROM EquipmentCategory WHERE (Category = @Category)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Category FROM dbo.EquipmentCategory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[EquipmentCategory] SET [Category] = @Category WHERE (([Category] = @Original_Category));
SELECT Category FROM EquipmentCategory WHERE (Category = @Category)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Category" DataSetColumn="Category" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EquipmentInventoryConnectionString (MySettings)" DbObjectName="dbo.EquipmentCategory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillCategories" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillCategories" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillCategories">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Category FROM dbo.EquipmentCategory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EquipmentInventoryDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="EquipmentInventoryDataSet" msprop:Generator_UserDSName="EquipmentInventoryDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="EquipmentAudio_x000D__x000A_" msprop:Generator_TableClassName="_EquipmentAudio__DataTable" msprop:Generator_TableVarName="_tableEquipmentAudio__" msprop:Generator_TablePropName="_EquipmentAudio__" msprop:Generator_RowDeletingName="_EquipmentAudio__RowDeleting" msprop:Generator_RowChangingName="_EquipmentAudio__RowChanging" msprop:Generator_RowEvHandlerName="_EquipmentAudio__RowChangeEventHandler" msprop:Generator_RowDeletedName="_EquipmentAudio__RowDeleted" msprop:Generator_UserTableName="EquipmentAudio&#xD;&#xA;" msprop:Generator_RowChangedName="_EquipmentAudio__RowChanged" msprop:Generator_RowEvArgName="_EquipmentAudio__RowChangeEvent" msprop:Generator_RowClassName="_EquipmentAudio__Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Equipment" msprop:Generator_ColumnVarNameInTable="columnEquipment" msprop:Generator_ColumnPropNameInRow="Equipment" msprop:Generator_ColumnPropNameInTable="EquipmentColumn" msprop:Generator_UserColumnName="Equipment">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EquipmentCategory" msprop:Generator_TableClassName="EquipmentCategoryDataTable" msprop:Generator_TableVarName="tableEquipmentCategory" msprop:Generator_RowChangedName="EquipmentCategoryRowChanged" msprop:Generator_TablePropName="EquipmentCategory" msprop:Generator_RowDeletingName="EquipmentCategoryRowDeleting" msprop:Generator_RowChangingName="EquipmentCategoryRowChanging" msprop:Generator_RowEvHandlerName="EquipmentCategoryRowChangeEventHandler" msprop:Generator_RowDeletedName="EquipmentCategoryRowDeleted" msprop:Generator_RowClassName="EquipmentCategoryRow" msprop:Generator_UserTableName="EquipmentCategory" msprop:Generator_RowEvArgName="EquipmentCategoryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Category" msprop:Generator_ColumnVarNameInTable="columnCategory" msprop:Generator_ColumnPropNameInRow="Category" msprop:Generator_ColumnPropNameInTable="CategoryColumn" msprop:Generator_UserColumnName="Category">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EquipmentAudio_x000D__x000A_" />
      <xs:field xpath="mstns:Equipment" />
    </xs:unique>
    <xs:unique name="EquipmentCategory_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EquipmentCategory" />
      <xs:field xpath="mstns:Category" />
    </xs:unique>
  </xs:element>
</xs:schema>